"use strict";var precacheConfig=[["/codepen/index.html","c23b2577e9113c7939dd921d6dec2f47"],["/codepen/static/css/main.024251d7.css","58cbd90862995e8958127f2a53f1d81a"],["/codepen/static/js/main.576f613d.js","3e9f1bf18ae9a5b1f0bb0ec9904a069c"],["/codepen/static/media/balloon.19669222.png","19669222d95f04d2813ae8a6ac246ca4"],["/codepen/static/media/circular-black.7f42d848.otf","7f42d8488652eb250af2f484d377dbee"],["/codepen/static/media/circular-bold.6baed2bf.otf","6baed2bf580964bec9559ad83caee43d"],["/codepen/static/media/circular-book.6365c40a.otf","6365c40aa59d462f1cc52ccce9635cb4"],["/codepen/static/media/circular-medium.4fcdd97f.otf","4fcdd97fadc3a1d9887f816f2aa67f1d"],["/codepen/static/media/cloud.5fdc9ee7.svg","5fdc9ee74cee77869f23fd43a470fe1a"],["/codepen/static/media/icomoon.2fd8865e.woff","2fd8865e0f2732aebe3649a140a6d4ca"],["/codepen/static/media/icomoon.8966cf66.eot","8966cf660288aaf7dea6bcfceb3cae25"],["/codepen/static/media/icomoon.9c5ecc5b.svg","9c5ecc5bca6b1dc41a81eaeb795a92cb"],["/codepen/static/media/icomoon.d1aef7ed.ttf","d1aef7ed6478b783cdeb5e0774707f61"],["/codepen/static/media/kratki.d5a48ac7.png","d5a48ac7fdb58fcc07527c8e77df697f"],["/codepen/static/media/kratki@2x.df6cfddc.png","df6cfddc355e45aac51e39aa48af2b82"],["/codepen/static/media/logo.b72ec757.svg","b72ec7578a1c62844586358326d5f871"],["/codepen/static/media/stars.420e8c6f.png","420e8c6fb1f47a4462ac8906e72068f0"],["/codepen/static/media/stars@2x.9c4f376f.png","9c4f376fc761982c7f3de5372edced97"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),c="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),t=urlsToCacheKeys.has(a));var n="/codepen/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});